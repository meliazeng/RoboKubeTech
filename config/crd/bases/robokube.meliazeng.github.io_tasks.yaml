---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: tasks.robokube.meliazeng.github.io
spec:
  group: robokube.meliazeng.github.io
  names:
    kind: Task
    listKind: TaskList
    plural: tasks
    singular: task
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Task is the Schema for the tasks API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TaskSpec defines the desired state of Task
            properties:
              description:
                description: Description provides a human-readable description of
                  the Task.
                type: string
              dockerImage:
                description: DockerImage is a string field representing the container
                  image to use for the Task.
                type: string
              dryRun:
                description: Run the task without actually call the entity to test
                  if payload is valid
                type: boolean
              offset:
                description: offset period where the task will be executed before
                  or cut off after
                format: int32
                type: integer
              payload:
                description: Payload is a JSON object that contains data to be passed
                  to the task in github action format
                x-kubernetes-preserve-unknown-fields: true
              persistant:
                description: Persistant meaning the task will be remain after completion
                type: boolean
              runTime:
                description: The time when the task will be scheduled to run once.
                  if Schedule is set, this field will be when the schedule ends
                format: date-time
                type: string
              schedule:
                description: Schedule is a cron expression string that defines the
                  schedule for running the Task.
                type: string
              targets:
                description: Task will be assign to
                items:
                  description: TargetRef specifies the target of a task.
                  properties:
                    action:
                      description: Action
                      type: string
                    name:
                      description: Name is the name of the target.
                      type: string
                    type:
                      description: Type is the type of the target.
                      type: string
                  required:
                  - name
                  - type
                  type: object
                type: array
              unConditonalRun:
                description: UnConditonalRun means the task will be run regardless
                  of the entity's phase
                type: boolean
            required:
            - payload
            type: object
          status:
            description: TaskStatus defines the observed state of Task
            properties:
              completedTime:
                description: CompletedTime is a timestamp indicating when the Task
                  was completed.
                format: date-time
                type: string
              conditions:
                description: Conditions represents the latest available observations
                  of a Task's current state.
                items:
                  description: Condition describes the state of a resource at a certain
                    point.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: (Optional) Human-readable message indicating details
                        about last transition.
                      type: string
                    reason:
                      description: |-
                        (Optional) Unique, this should be a short, machine understandable string that gives the reason
                        for the condition's last transition. For example, "ImageFound" could be used as the reason for
                        a resource's Status being "Running".
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition. such as Progressing/Ready/Reconciling
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              executeTime:
                description: ExecuteTime is a timestamp indicating when the Task should
                  be executed.
                format: date-time
                type: string
              failedEntities:
                items:
                  type: string
                type: array
              observedGeneration:
                format: int64
                type: integer
              phase:
                description: Phase indicates the current phase of the Task (e.g.,
                  Pending, Running, Completed, Failed).
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
